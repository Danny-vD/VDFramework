<?xml version="1.0"?>
<doc>
    <assembly>
        <name>VDUnityFramework</name>
    </assembly>
    <members>
        <member name="T:VDFramework.BetterMonoBehaviour">
            <summary>
            An 'improved' <see cref="T:UnityEngine.MonoBehaviour"/> which caches often used properties
            </summary>
        </member>
        <member name="P:VDFramework.BetterMonoBehaviour.CachedTransform">
            <summary>
            The transform of this object
            </summary>
        </member>
        <member name="P:VDFramework.BetterMonoBehaviour.CachedGameObject">
            <summary>
            The gameobject where this component is attached to
            </summary>
        </member>
        <member name="P:VDFramework.BetterMonoBehaviour.transform">
            <summary>
            Overridden to return the CachedTransform
            </summary>
        </member>
        <member name="P:VDFramework.BetterMonoBehaviour.gameObject">
            <summary>
            Overridden to return the CachedGameObject
            </summary>
        </member>
        <member name="T:VDFramework.Monobehaviours.TimerManagerUpdater">
            <summary>
            A simple utility behaviour for Unity that updates the TimerManager in Update using Time.deltaTime
            (makes the object DontDestroyOnLoad)
            </summary>
        </member>
        <member name="T:VDFramework.Singleton.Singleton`1">
            <summary>
            A abstract generic implementation of the singleton pattern
            </summary>
            <typeparam name="TSingleton">The type to create a singleton of</typeparam>
        </member>
        <member name="M:VDFramework.Singleton.Singleton`1.DestroyInstance">
            <summary>
            Sets the instance of the singleton to null.
            </summary>
        </member>
        <member name="M:VDFramework.UnityExtensions.CoroutineExtensions.Then(System.Collections.IEnumerator,System.Collections.IEnumerator)">
            <summary>
            Execute another coroutine immediately after this one is done
            </summary>
        </member>
        <member name="M:VDFramework.UnityExtensions.CoroutineExtensions.Wait(System.Collections.IEnumerator,System.Single)">
            <summary>
            Wait for a set amount of seconds immediately after this coroutine
            </summary>
        </member>
        <member name="M:VDFramework.UnityExtensions.CoroutineExtensions.WaitRealTime(System.Collections.IEnumerator,System.Single)">
            <summary>
            Wait for a set amount of real-time seconds immediately after this coroutine
            </summary>
        </member>
        <member name="M:VDFramework.UnityExtensions.CoroutineExtensions.Then(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Execute another coroutine immediately after this one is done
            </summary>
        </member>
        <member name="M:VDFramework.UnityExtensions.CoroutineExtensions.Wait(System.Collections.IEnumerable,System.Single)">
            <summary>
            Wait for a set amount of seconds immediately after this coroutine
            </summary>
        </member>
        <member name="M:VDFramework.UnityExtensions.CoroutineExtensions.WaitRealTime(System.Collections.IEnumerable,System.Single)">
            <summary>
            Wait for a set amount of real-time seconds immediately after this coroutine
            </summary>
        </member>
        <member name="M:VDFramework.UnityExtensions.GameObjectExtensions.EnsureComponent``1(UnityEngine.GameObject)">
            <summary>
            Ensures that the specified <see cref="!:TComponent"/> is on this <see cref="T:UnityEngine.GameObject"/>.
            </summary>
        </member>
        <member name="M:VDFramework.UnityExtensions.TransformExtensions.DestroyChildren(UnityEngine.Transform)">
            <summary>
            Destroys all children
            </summary>
        </member>
        <member name="M:VDFramework.UnityExtensions.TransformExtensions.DestroyChildrenImmediate(UnityEngine.Transform)">
            <summary>
            Destroys all children immediately
            </summary>
        </member>
        <member name="T:VDFramework.Exceptions.SingletonViolationException">
            <summary>
            The exception that is thrown once you create a 2nd instance of a singleton
            </summary>
        </member>
        <member name="M:VDFramework.Extensions.EnumExtensions.GetValues``1(``0)">
            <summary>
            Returns an IEnumerable of <see cref="!:TEnum"/> that has all the values of the enum
            </summary>
        </member>
        <member name="M:VDFramework.Extensions.Int32Extentions.HasOneMatchingBit(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Check every bit one by one to see if they are equal
            </summary>
            <returns>TRUE if at least one bit is equal</returns>
        </member>
        <member name="M:VDFramework.Extensions.ListExtensions.ResizeList``1(System.Collections.Generic.List{``0},System.Int32)">
            <summary>
            Resize the list so that it holds a <see cref="!:newSize"/> amount of <see cref="!:TItem"/>
            <para></para>(will also resize the underlaying array)
            </summary>
            <param name="list">The list to resize</param>
            <param name="newSize">The elements that are in the list</param>
            <typeparam name="TItem">The type of items in the list</typeparam>
        </member>
        <member name="M:VDFramework.Extensions.RandomItem.Randomize``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Randomly sorts the IEnumberable
            </summary>
        </member>
        <member name="M:VDFramework.Extensions.StringExtensions.InsertSpaceBeforeCapitals(System.String)">
            <summary>
            Returns a new string where a space is inserted before each capital, skipping the first char
            </summary>
        </member>
        <member name="M:VDFramework.Extensions.StringExtensions.EnforceLength(System.String,System.Int32,System.Char,System.Collections.Generic.IReadOnlyCollection{System.String})">
            <summary>
            Returns a string with specified length where certain substrings will only count as 1 char
            </summary>
            <param name="desiredLength">The length that you want the returned string to be</param>
            <param name="addCharToEnd">In case the string is too short, add this character to get the desired length</param>
            <param name="countAs1Char">A collection of substrings that will only count as 1 char for the purposes of returning the desired length</param>
        </member>
        <member name="M:VDFramework.Extensions.StringExtensions.GetCharsBetweenAandB(System.String,System.Char,System.Char,System.Int32)">
            <summary>
            Get all characters between two characters including the two characters (will not return correctly if another pair is nested within a pair)
            </summary>
        </member>
        <member name="M:VDFramework.Extensions.StringExtensions.CharCount(System.String,System.Char)">
            <summary>
            Get a count of how many times a specific character appears within the string
            </summary>
        </member>
        <member name="M:VDFramework.Utility.EnumDictionaryUtil.PopulateEnumDictionary``3(System.Collections.Generic.List{``0})">
            <summary>
            Will add a KeyValuePair for every enumValue to the list
            </summary>
        </member>
        <member name="M:VDFramework.Utility.MathUtil.GetSignFactor(System.Single)">
            <summary>
            Returns the sign of the number, and 0 if input == 0
            </summary>
        </member>
        <member name="M:VDFramework.Utility.MathUtil.GetYCoordinateOnCurve(System.Single,System.Single,System.Single)">
            <summary>
            Get the Y coordinate of a 2D curve that crosses y = 0 at [0,0] and [distance,0] with a maxY of height
            </summary>
        </member>
        <member name="M:VDFramework.Utility.MathUtil.GetXCoordinatesOnCurve(System.Single,System.Single,System.Single)">
            <summary>
            Get the X coordinates of a 2D curve that crosses y = 0 at [0,0] and [distance,0] with a maxY of height
            </summary>
        </member>
        <member name="T:VDFramework.Utility.TimerUtil.TimerHandle">
            <summary>
            A representation of a timer which invokes an event after a certain amount of seconds pass (possibly loops)
            </summary>
        </member>
        <member name="E:VDFramework.Utility.TimerUtil.TimerHandle.OnTimerExpire">
            <summary>
            The callback to invoke when the timer expires
            </summary>
        </member>
        <member name="P:VDFramework.Utility.TimerUtil.TimerHandle.CurrentTime">
            <summary>
            The amount of seconds remaining until the callback invokes
            </summary>
        </member>
        <member name="P:VDFramework.Utility.TimerUtil.TimerHandle.CurrentTimeNormalized">
            <summary>
            A value of [0,1] that represents the % between 0 and the startTime of the timer
            </summary>
        </member>
        <member name="P:VDFramework.Utility.TimerUtil.TimerHandle.StartTime">
            <summary>
            The amount of seconds that the timer started with (will be reset to this value when the timer loops)
            </summary>
        </member>
        <member name="P:VDFramework.Utility.TimerUtil.TimerHandle.IsLooping">
            <summary>
            Whether or not the timer should reset itself upon expiring
            </summary>
        </member>
        <member name="P:VDFramework.Utility.TimerUtil.TimerHandle.IsPaused">
            <summary>
            If a timer is paused the internal timer will not be updated
            </summary>
        </member>
        <member name="P:VDFramework.Utility.TimerUtil.TimerHandle.IsValid">
            <summary>
            Whether or not this handle still represents an active timer (will be false if a non-looped timer expires)
            </summary>
        </member>
        <member name="M:VDFramework.Utility.TimerUtil.TimerHandle.ResetTimer">
            <summary>
            Reset the internal timer immediately to <see cref="P:VDFramework.Utility.TimerUtil.TimerHandle.StartTime"/>
            </summary>
        </member>
        <member name="M:VDFramework.Utility.TimerUtil.TimerHandle.SetLoop(System.Boolean)">
            <summary>
            Set whether or not the timer should loop after expiring
            </summary>
            <param name="loop">Should the timer loop after expiring?</param>
        </member>
        <member name="M:VDFramework.Utility.TimerUtil.TimerHandle.SetStartTime(System.Double,System.Boolean)">
            <summary>
            Set the <see cref="P:VDFramework.Utility.TimerUtil.TimerHandle.StartTime"/> of the timer
            <para>This will only have an effect if the timer is reset or loops</para>
            </summary>
            <param name="newStartTime">The new start time for the timer</param>
            <param name="resetTimer">Whether the timer should reset after setting the new start time</param>
        </member>
        <member name="M:VDFramework.Utility.TimerUtil.TimerHandle.SetPause(System.Boolean)">
            <summary>
            Pause the timer to temporarily prevent updating the internal timer
            </summary>
        </member>
        <member name="M:VDFramework.Utility.TimerUtil.TimerHandle.Stop">
            <summary>
            Stop this timer immediately and prevent further updates
            <para>If you mean to temporarily pause a timer, use <see cref="M:VDFramework.Utility.TimerUtil.TimerHandle.SetPause(System.Boolean)"/> instead</para>
            </summary>
        </member>
        <member name="M:VDFramework.Utility.TimerUtil.TimerHandle.CompareTo(VDFramework.Utility.TimerUtil.TimerHandle)">
            <summary>
            Compare using the StartTime
            <para>(uses CurrentTime if equal)</para>
            </summary>
        </member>
        <member name="T:VDFramework.Utility.TimerUtil.TimerManager">
            <summary>
            Manager class for all timers
            <para>use <see cref="M:VDFramework.Utility.TimerUtil.TimerManager.Update(System.Double)"/> to update all timers</para>
            <para>The timers are updated in reversed order so the last one in the list will be updated first</para>
            </summary>
        </member>
        <member name="M:VDFramework.Utility.TimerUtil.TimerManager.StartNewTimer(System.Double,System.Action,System.Boolean)">
            <summary>
            Start a new timer
            </summary>
            <param name="startTime">The time in seconds after which the callBack will be called</param>
            <param name="timerExpiredCallback">The callback to invoke once the timer expires</param>
            <param name="loop">Whether this timer should loop (restart once it ends)</param>
            <returns>A handle to the timer, this can be used to Pause the timer or change some properties
            <para>It can also be safely ignored if not needed</para></returns>
        </member>
        <member name="M:VDFramework.Utility.TimerUtil.TimerManager.Update(System.Double)">
            <summary>
            Updates the internal timer of each <see cref="T:VDFramework.Utility.TimerUtil.TimerHandle"/> with deltaTime
            </summary>
            <param name="deltaTime">The amount to update the timers with</param>
        </member>
        <member name="T:VDFramework.Utility.Windows.EnvironmentVariables">
            <summary>
            An Utility class to easily access some environment variables
            </summary>
        </member>
        <member name="P:VDFramework.Utility.Windows.SpecialFolder.DefaultPath">
            <summary>
            Returns the default path for the folder
            </summary>
        </member>
        <member name="P:VDFramework.Utility.Windows.SpecialFolder.Path">
            <summary>
            Get the current path to the folder
            </summary>
            <exception cref="T:System.IO.DirectoryNotFoundException">Throws if there is no valid path to the folder</exception>
        </member>
        <member name="P:VDFramework.Utility.Windows.SpecialFolder.CSIDL">
            <summary>
            constant special item ID list
            <para>(Only applicable before Windows Vista)</para>
            <para>https://docs.microsoft.com/en-us/windows/win32/shell/csidl</para>
            </summary>
        </member>
        <member name="T:VDFramework.Utility.Windows.SpecialFolders">
            <summary>
            An utility class to easily access information about the special folders
            </summary>
        </member>
        <member name="F:VDFramework.Utility.Windows.SpecialFolders.AddNewPrograms">
            <summary>
            <para>VIRTUAL FOLDER: no path available</para>
            </summary>
        </member>
        <member name="F:VDFramework.Utility.Windows.SpecialFolders.AppdataDesktop">
            <summary>
            Used internally by .NET applications to enable cross-platform app functionality. It is not intended to be used directly from an application.
            </summary>
        </member>
        <member name="F:VDFramework.Utility.Windows.SpecialFolders.AppdataDocuments">
            <summary>
            Used internally by .NET applications to enable cross-platform app functionality. It is not intended to be used directly from an application.
            </summary>
        </member>
        <member name="F:VDFramework.Utility.Windows.SpecialFolders.AppDataFavorites">
            <summary>
            Used internally by .NET applications to enable cross-platform app functionality. It is not intended to be used directly from an application.
            </summary>
        </member>
        <member name="F:VDFramework.Utility.Windows.SpecialFolders.AppDataProgramData">
            <summary>
            Used internally by .NET applications to enable cross-platform app functionality. It is not intended to be used directly from an application.
            </summary>
        </member>
        <member name="F:VDFramework.Utility.Windows.SpecialFolders.AppsFolder">
            <summary>
            <para>VIRTUAL FOLDER: no path available</para>
            </summary>
        </member>
        <member name="F:VDFramework.Utility.Windows.SpecialFolders.AppUpdates">
            <summary>
            <para>VIRTUAL FOLDER: no path available</para>
            </summary>
        </member>
        <member name="F:VDFramework.Utility.Windows.SpecialFolders.ChangeRemovePrograms">
            <summary>
            <para>VIRTUAL FOLDER: no path available</para>
            </summary>
        </member>
        <member name="F:VDFramework.Utility.Windows.SpecialFolders.ComputerFolder">
            <summary>
            <para>VIRTUAL FOLDER: no path available</para>
            </summary>
        </member>
        <member name="F:VDFramework.Utility.Windows.SpecialFolders.ConflictFolder">
            <summary>
            <para>VIRTUAL FOLDER: no path available</para>
            </summary>
        </member>
        <member name="F:VDFramework.Utility.Windows.SpecialFolders.ConnectionsFolder">
            <summary>
            <para>VIRTUAL FOLDER: no path available</para>
            </summary>
        </member>
        <member name="F:VDFramework.Utility.Windows.SpecialFolders.ControlPanelFolder">
            <summary>
            <para>VIRTUAL FOLDER: no path available</para>
            </summary>
        </member>
        <member name="F:VDFramework.Utility.Windows.SpecialFolders.Downloads">
            <summary>
            The default folder where downloaded files are stored.
            </summary>
        </member>
        <member name="F:VDFramework.Utility.Windows.SpecialFolders.Games">
             <summary>
             Deprecated in Windows 10, version 1803 and later versions. In these versions, it returns 0x80070057 - E_INVALIDARG
            <para></para>
             <para>VIRTUAL FOLDER: no path available</para>
             </summary>
        </member>
        <member name="F:VDFramework.Utility.Windows.SpecialFolders.HomeGroup">
            <summary>
            <para>VIRTUAL FOLDER: no path available</para>
            </summary>
        </member>
        <member name="F:VDFramework.Utility.Windows.SpecialFolders.HomeGroupCurrentUser">
            <summary>
            <para>VIRTUAL FOLDER: no path available</para>
            </summary>
        </member>
        <member name="F:VDFramework.Utility.Windows.SpecialFolders.InternetFolder">
            <summary>
            <para>VIRTUAL FOLDER: no path available</para>
            </summary>
        </member>
        <member name="F:VDFramework.Utility.Windows.SpecialFolders.Libraries">
            <summary>
            The folder where libraries like 'Videos', 'Images', 'Documents', 'Music' etc. are stored.
            </summary>
        </member>
        <member name="F:VDFramework.Utility.Windows.SpecialFolders.NetworkFolder">
            <summary>
            <para>VIRTUAL FOLDER: no path available</para>
            </summary>
        </member>
        <member name="F:VDFramework.Utility.Windows.SpecialFolders.PrintersFolder">
            <summary>
            <para>VIRTUAL FOLDER: no path available</para>
            </summary>
        </member>
        <member name="F:VDFramework.Utility.Windows.SpecialFolders.ProgramFilesX64">
            <summary>
            Not supported on 32-bit operating systems. It also is not supported for 32-bit applications running on 64-bit operating systems.
            Attempting to use FOLDERID_ProgramFilesX64 in either situation results in an error.
            </summary>
        </member>
        <member name="F:VDFramework.Utility.Windows.SpecialFolders.RecycleBinFolder">
            <summary>
            <para>VIRTUAL FOLDER: no path available</para>
            </summary>
        </member>
        <member name="F:VDFramework.Utility.Windows.SpecialFolders.SEARCH_CSC">
            <summary>
            <para>VIRTUAL FOLDER: no path available</para>
            </summary>
        </member>
        <member name="F:VDFramework.Utility.Windows.SpecialFolders.SearchHome">
            <summary>
            <para>VIRTUAL FOLDER: no path available</para>
            </summary>
        </member>
        <member name="F:VDFramework.Utility.Windows.SpecialFolders.SEARCH_MAPI">
            <summary>
            <para>VIRTUAL FOLDER: no path available</para>
            </summary>
        </member>
        <member name="F:VDFramework.Utility.Windows.SpecialFolders.SkyDrive">
            <summary>
            OneDrive
            </summary>
        </member>
        <member name="F:VDFramework.Utility.Windows.SpecialFolders.SkyDriveCameraRoll">
            <summary>
            OneDrive Camera Roll
            </summary>
        </member>
        <member name="F:VDFramework.Utility.Windows.SpecialFolders.SkyDriveDocuments">
            <summary>
            OneDrive Documents
            </summary>
        </member>
        <member name="F:VDFramework.Utility.Windows.SpecialFolders.SkyDrivePictures">
            <summary>
            OneDrive Pictures
            </summary>
        </member>
        <member name="F:VDFramework.Utility.Windows.SpecialFolders.SyncManagerFolder">
            <summary>
            <para>VIRTUAL FOLDER: no path available</para>
            </summary>
        </member>
        <member name="F:VDFramework.Utility.Windows.SpecialFolders.SyncResultsFolder">
            <summary>
            <para>VIRTUAL FOLDER: no path available</para>
            </summary>
        </member>
        <member name="F:VDFramework.Utility.Windows.SpecialFolders.SyncSetupFolder">
            <summary>
            <para>VIRTUAL FOLDER: no path available</para>
            </summary>
        </member>
        <member name="F:VDFramework.Utility.Windows.SpecialFolders.System">
            <summary>
            System32
            </summary>
        </member>
        <member name="F:VDFramework.Utility.Windows.SpecialFolders.UsersFiles">
            <summary>
            <para>VIRTUAL FOLDER: no path available</para>
            </summary>
        </member>
        <member name="F:VDFramework.Utility.Windows.SpecialFolders.UsersLibraries">
            <summary>
            <para>VIRTUAL FOLDER: no path available</para>
            </summary>
        </member>
    </members>
</doc>
